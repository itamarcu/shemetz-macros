{"name":"Eyedropper Color Pick","type":"script","author":"IlfuVOtIwzHO5ODq","img":"https://image.flaticon.com/icons/png/128/4469/4469781.png","scope":"global","command":"/*\n--- Eyedropper Color Pick ---\nWhen activated (best with hotkey), will capture the color under the cursor and set it to the drawing tools default\n for stroke color.  The color may include alpha, though you might want to set ignoreBackground to false to capture it,\n because otherwise the default behavior is to blend the color of all layers' pixels together (i.e. make it look like\n you'd see it on your screen).\n\n Doesn't currently support lighting/sight (but you can enable grid/effects/templates if you want).\n\n You can also edit this to change fillColor/alpha instead of strokeColor/alpha, of course.\n\nsource:\nhttps://github.com/itamarcu/foundry-macros/blob/master/eyedropper-color-pick.js\nsuggested icon:\nhttps://image.flaticon.com/icons/png/128/4469/4469781.png\n*/\n\nconst ignoreBackground = false\n\nfunction main () {\n  const colorWithAlpha = getMousePixelOnScreen()\n  const color = colorWithAlpha.substr(0, 1 + 6)\n  const alpha = parseInt(colorWithAlpha.substr(1 + 6, 2), 16) / 255\n  updateDrawingDefaults({\n    strokeColor: color,\n    strokeAlpha: alpha\n  })\n  setAsDrawingToolBackground(color)\n}\n\nfunction getMousePixelOnScreen () {\n  const reversedLayers = [\n    !ignoreBackground && canvas.background,   // 0\n    canvas.drawings,     // 20\n    // canvas.grid,         // 30\n    // canvas.walls,        // 40\n    // canvas.templates,    // 50\n    // canvas.notes,        // 60\n    canvas.tokens,       // 100\n    canvas.foreground,   // 200\n    // canvas.sounds,       // 300\n    // canvas.lighting,     // 300\n    // canvas.sight,        // 400\n    // canvas.effects,      // 500\n    // canvas.controls,      // 1000\n  ].filter(it => !!it)\n    .reverse()\n\n  const pixelsFound = []\n  const layersFound = []\n  for (const layer of reversedLayers) {\n    const pixelRGBA = getMousePixelOnLayer(layer)\n    if (pixelRGBA[3] !== 0) {\n      // converting alpha from 0—255 to 0—1\n      pixelsFound.push([...pixelRGBA.subarray(0, 3), pixelRGBA[3] / 255])\n      layersFound.push(layer.name.replace('Layer', ''))\n    }\n    if (pixelRGBA[3] === 255) {\n      // stop checking lower layers\n      break\n    }\n  }\n  if (pixelsFound.length > 0) {\n    pixelsFound.reverse()\n    layersFound.reverse()\n    const pixelRGBA = blendColors(pixelsFound)\n    const color = rgbaToHex(...pixelRGBA)\n    console.log(`%c${color}    %c (${layersFound.toString()})`, `background: ${color}`, '')\n    return color\n  }\n  const color = '#' + ((1 << 24) + canvas.backgroundColor).toString(16).slice(1) + 'ff'\n  console.log(`found nothing, so default %c  ${color}`, `background: ${color}`)\n  return color\n}\n\n/**\n * note:  returns alpha in range 0—255\n */\nfunction getMousePixelOnLayer (layer) {\n  const mPos = getLocalMousePosition()\n  const tPos = layer.getLocalBounds()\n  const x = mPos.x - tPos.x\n  const y = mPos.y - tPos.y\n  return readPixel(layer, x, y)\n}\n\n/**\n * https://github.com/League-of-Foundry-Developers/simplefog/blob/master/js/helpers.js\n */\nfunction readPixel (target, x = 0, y = 0) {\n  const { renderer } = canvas.app\n  let resolution\n  let renderTexture\n  let generated = false\n  if (target instanceof PIXI.RenderTexture) {\n    renderTexture = target\n  } else {\n    renderTexture = renderer.generateTexture(target)\n    generated = true\n  }\n  if (renderTexture) {\n    resolution = renderTexture.baseTexture.resolution\n    renderer.renderTexture.bind(renderTexture)\n  }\n  const pixel = new Uint8Array(4)\n  // read pixels to the array\n  const { gl } = renderer\n  gl.readPixels(x * resolution, y * resolution, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel)\n  if (generated) {\n    renderTexture.destroy(true)\n  }\n  return pixel\n}\n\nfunction getLocalMousePosition () {\n  const { x, y } = canvas.app.renderer.plugins.interaction.mouse.getLocalPosition(canvas.app.stage)\n  return { x, y }\n}\n\n/**\n * https://stackoverflow.com/a/49974627/1703463\n * expects RGB in 0—255 and a in 0—1\n */\nfunction rgbaToHex (r, g, b, a) {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)\n    + '' + (a ? ((1 << 8) + Math.round(a * 255)).toString(16).slice(1)\n      : '')\n}\n\n/**\n * https://gist.github.com/JordanDelcros/518396da1c13f75ee057#gistcomment-2075095\n * args is a list like [[12, 255, 0, 0.5], [36, 19, 183, 0.2]]\n */\nfunction blendColors (args) {\n  let base = [0, 0, 0, 0]\n  let mix\n  let added\n  while (added = args.shift()) {\n    if (typeof added[3] === 'undefined') {\n      added[3] = 1\n    }\n    // check if both alpha channels exist.\n    if (base[3] && added[3]) {\n      mix = [0, 0, 0, 0]\n      // alpha\n      mix[3] = 1 - (1 - added[3]) * (1 - base[3])\n      // red\n      mix[0] = Math.round((added[0] * added[3] / mix[3]) + (base[0] * base[3] * (1 - added[3]) / mix[3]))\n      // green\n      mix[1] = Math.round((added[1] * added[3] / mix[3]) + (base[1] * base[3] * (1 - added[3]) / mix[3]))\n      // blue\n      mix[2] = Math.round((added[2] * added[3] / mix[3]) + (base[2] * base[3] * (1 - added[3]) / mix[3]))\n\n    } else if (added) {\n      mix = added\n    } else {\n      mix = base\n    }\n    base = mix\n  }\n\n  return mix\n}\n\nasync function updateDrawingDefaults (changedData) {\n  const currentDefault = game.settings.get('core', DrawingsLayer.DEFAULT_CONFIG_SETTING)\n  const newDefault = {\n    ...currentDefault,\n    ...changedData,\n  }\n  return game.settings.set('core', DrawingsLayer.DEFAULT_CONFIG_SETTING, newDefault)\n}\n\nfunction setAsDrawingToolBackground (color) {\n  $('[data-tool=\"freehand\"]')[0].style.background = color\n}\n\nconst macro = this\n\n/**\n * silly idea, don't actually use this:  will set this macro's image based on the color\n */\nfunction setAsMacroImage (color) {\n  const rrggbb = color.slice(1)\n  macro.update({'img': `https://color-hex.org/colors/${rrggbb}.png`})\n}\n\nmain()","folder":null,"sort":0,"permission":{"default":0,"IlfuVOtIwzHO5ODq":3},"flags":{"furnace":{"runAsGM":false},"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.epkbKQMNSFoLw7aP"}},"_id":"XdsiRnVDrVqFZn54"}
{"name":"i","type":"script","author":"IlfuVOtIwzHO5ODq","img":"https://i.imgur.com/iw4sH39.png","scope":"global","command":"ShemetzMacros.chat(ShemetzMacros.italicize(args))","folder":null,"sort":0,"permission":{"default":0,"IlfuVOtIwzHO5ODq":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.JtwpwScoC5bbeVzs"}},"_id":"a8eS6KGBGu5edaYB"}
{"name":"crit","type":"script","author":"IlfuVOtIwzHO5ODq","img":"https://i.imgur.com/iw4sH39.png","scope":"global","command":"ShemetzMacros.crit(args[0])","folder":null,"sort":0,"permission":{"default":0,"IlfuVOtIwzHO5ODq":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.KBXHfLdpwQO78M2l"}},"_id":"dHa5QzKzF1eSHbVY"}
{"name":"b","type":"script","author":"IlfuVOtIwzHO5ODq","img":"https://i.imgur.com/iw4sH39.png","scope":"global","command":"ShemetzMacros.chat(ShemetzMacros.bold(args))","folder":null,"sort":0,"permission":{"default":0,"IlfuVOtIwzHO5ODq":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.JtwpwScoC5bbeVzs"}},"_id":"n0u8MH7iSQcUsTuV"}
{"name":"Critical Hit Tables","type":"script","author":"IlfuVOtIwzHO5ODq","img":"https://i.imgur.com/Pr6tXUH.png","scope":"global","command":"ShemetzMacros.critDialog()","folder":null,"sort":0,"permission":{"default":0,"IlfuVOtIwzHO5ODq":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.T4iFKlZJQ800QjMF"}},"_id":"Sgl5egJT39JtWRBr"}
